{"ast":null,"code":"import _slicedToArray from\"/Users/rishabh/Desktop/AltCampus/Advanced React/GitHub-Battle-Hooks/github-battle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Card from'./Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FetchAllCards(props){var darkMode=props.darkMode;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),FetchCards=_useState2[0],setFetchCards=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setisLoading=_useState4[1];var _useState5=useState('All'),_useState6=_slicedToArray(_useState5,2),activeName=_useState6[0],setActiveName=_useState6[1];var tags=['All','JavaScript','Ruby','Java','CSS','Python'];// FetchCards\nfunction FetchTagsCards(){fetch(\"https://api.github.com/search/repositories?q=stars:%3E1+language:\".concat(activeName,\"&sort=stars&order=desc&type=Repositories\")).then(function(res){if(!res.ok){throw new Error(\"Something went Wrong\");}else{return res.json();}}).then(function(githubData){setFetchCards(githubData.items);setisLoading(false);}).catch(function(err){return console.log(err);});};useEffect(function(){FetchTagsCards();console.log(FetchCards);},[activeName]);// FetchCards ended\nfunction handleName(each){console.log(each);setActiveName(each);}//  isLoding \nif(isLoading){/*#__PURE__*/_jsx(\"img\",{src:\"/images/loading.gif\",alt:\"\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:darkMode===true?\"flex tags justify_between text_white\":\"flex tags justify_between\",children:tags.map(function(each){return/*#__PURE__*/_jsx(\"h3\",{className:activeName===each?'active':\"\",onClick:function onClick(){return handleName(each);},children:each});})}),/*#__PURE__*/_jsx(\"div\",{children:FetchCards?/*#__PURE__*/_jsx(Card,{darkMode:darkMode,FetchCards:FetchCards}):/*#__PURE__*/_jsx(\"img\",{src:\"/images/loading.gif\",alt:\"\"})})]});}export default FetchAllCards;","map":{"version":3,"sources":["/Users/rishabh/Desktop/AltCampus/Advanced React/GitHub-Battle-Hooks/github-battle/src/Components/Tags.js"],"names":["React","useState","useEffect","Card","FetchAllCards","props","darkMode","FetchCards","setFetchCards","isLoading","setisLoading","activeName","setActiveName","tags","FetchTagsCards","fetch","then","res","ok","Error","json","githubData","items","catch","err","console","log","handleName","each","map"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAKC,CAAAA,QAAL,CAAiBD,KAAjB,CAAKC,QAAL,CACA,cAAkCL,QAAQ,CAAC,EAAD,CAA1C,wCAAKM,UAAL,eAAiBC,aAAjB,eACA,eAAgCP,QAAQ,CAAC,IAAD,CAAxC,yCAAKQ,SAAL,eAAgBC,YAAhB,eACA,eAAkCT,QAAQ,CAAC,KAAD,CAA1C,yCAAKU,UAAL,eAAiBC,aAAjB,eACA,GAAIC,CAAAA,IAAI,CAAG,CAAC,KAAD,CAAQ,YAAR,CAAsB,MAAtB,CAA8B,MAA9B,CAAsC,KAAtC,CAA6C,QAA7C,CAAX,CAEA;AACA,QAASC,CAAAA,cAAT,EAAyB,CACrBC,KAAK,4EAAqEJ,UAArE,6CAAL,CACCK,IADD,CACM,SAACC,GAAD,CAAS,CACX,GAAG,CAACA,GAAG,CAACC,EAAR,CAAW,CACP,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACH,CAFD,IAEK,CACD,MAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CACJ,CAPD,EAQCJ,IARD,CAQM,SAACK,UAAD,CAAgB,CAClBb,aAAa,CAACa,UAAU,CAACC,KAAZ,CAAb,CACAZ,YAAY,CAAC,KAAD,CAAZ,CACH,CAXD,EAWGa,KAXH,CAWS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAXZ,EAYH,EAEDtB,SAAS,CAAC,UAAM,CACZY,cAAc,GACdW,OAAO,CAACC,GAAR,CAAYnB,UAAZ,EACH,CAHQ,CAGP,CAACI,UAAD,CAHO,CAAT,CAKA;AACA,QAASgB,CAAAA,UAAT,CAAoBC,IAApB,CAAyB,CACrBH,OAAO,CAACC,GAAR,CAAYE,IAAZ,EACAhB,aAAa,CAACgB,IAAD,CAAb,CACH,CAED;AACA,GAAGnB,SAAH,CAAa,CACT,yBAAK,GAAG,CAAC,qBAAT,CAA+B,GAAG,CAAC,EAAnC,GACH,CACD,mBACI,wCACI,YAAK,SAAS,CAAEH,QAAQ,GAAK,IAAb,CAAoB,sCAApB,CAA6D,2BAA7E,UAEQO,IAAI,CAACgB,GAAL,CAAS,SAACD,IAAD,qBACL,WAAI,SAAS,CAAEjB,UAAU,GAAKiB,IAAf,CAAsB,QAAtB,CAAiC,EAAhD,CAAoD,OAAO,CAAE,yBAAMD,CAAAA,UAAU,CAACC,IAAD,CAAhB,EAA7D,UAAsFA,IAAtF,EADK,EAAT,CAFR,EADJ,cAQI,qBAEQrB,UAAU,cAAG,KAAC,IAAD,EAAM,QAAQ,CAAED,QAAhB,CAA0B,UAAU,CAAEC,UAAtC,EAAH,cAAyD,YAAK,GAAG,CAAC,qBAAT,CAA+B,GAAG,CAAC,EAAnC,EAF3E,EARJ,GADJ,CAiBH,CAED,cAAeH,CAAAA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Card from './Card';\n\nfunction FetchAllCards(props) {\n    var {darkMode} = props;\n    var [FetchCards, setFetchCards] = useState([]);\n    var [isLoading, setisLoading] = useState(true);\n    var [activeName, setActiveName] = useState('All')\n    var tags = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python'];\n\n    // FetchCards\n    function FetchTagsCards(){\n        fetch(`https://api.github.com/search/repositories?q=stars:%3E1+language:${activeName}&sort=stars&order=desc&type=Repositories`)\n        .then((res) => {\n            if(!res.ok){\n                throw new Error(\"Something went Wrong\")\n            }else{\n                return res.json();\n            }\n        })\n        .then((githubData) => {\n            setFetchCards(githubData.items);\n            setisLoading(false)\n        }).catch(err => console.log(err))\n    };\n\n    useEffect(() => {\n        FetchTagsCards()\n        console.log(FetchCards)\n    },[activeName]) \n\n    // FetchCards ended\n    function handleName(each){\n        console.log(each)\n        setActiveName(each)\n    }\n\n    //  isLoding \n    if(isLoading){\n        <img src=\"/images/loading.gif\" alt=\"\" />\n    }\n    return (\n        <>\n            <div className={darkMode === true ? \"flex tags justify_between text_white\" : \"flex tags justify_between\"}>\n                {\n                    tags.map((each) => (\n                        <h3 className={activeName === each ? 'active' : \"\"} onClick={() => handleName(each)}>{each}</h3>\n                    ))\n                }\n            </div>\n            <div>\n                {\n                    FetchCards ? <Card darkMode={darkMode} FetchCards={FetchCards}/> : <img src=\"/images/loading.gif\" alt=\"\" /> \n                }\n            </div>\n\n        </>\n    )\n}\n\nexport default FetchAllCards\n"]},"metadata":{},"sourceType":"module"}