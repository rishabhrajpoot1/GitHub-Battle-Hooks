{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/Documents/github-battle-with-hooks/github-battle-hooks/src/Components/Tags.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FetchAllCards(props) {\n  _s();\n\n  var {\n    darkMode\n  } = props;\n  var [FetchCards, setFetchCards] = useState([]);\n  var [isLoading, setisLoading] = useState(true);\n  var [activeName, setActiveName] = useState('All');\n  var tags = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python']; // FetchCards\n\n  function FetchTagsCards() {\n    fetch(`https://api.github.com/search/repositories?q=stars:%3E1+language:${activeName}&sort=stars&order=desc&type=Repositories`).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Something went Wrong\");\n      } else {\n        return res.json();\n      }\n    }).then(githubData => {\n      setFetchCards(githubData.items);\n      setisLoading(false);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n  useEffect(() => {\n    FetchTagsCards();\n    console.log(FetchCards);\n  }, [activeName]); // FetchCards ended\n\n  function handleName(each) {\n    console.log(each);\n    setActiveName(each);\n  } //  isLoding \n\n\n  if (isLoading) {\n    /*#__PURE__*/\n    _jsxDEV(\"img\", {\n      src: \"/images/loading.gif\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: darkMode === true ? \"flex tags justify_between text_white\" : \"flex tags justify_between\",\n      children: tags.map(each => /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: activeName === each ? 'active' : \"\",\n        onClick: () => handleName(each),\n        children: each\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: FetchCards ? /*#__PURE__*/_jsxDEV(Card, {\n        darkMode: darkMode,\n        FetchCards: FetchCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/loading.gif\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 88\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FetchAllCards, \"u9qtAagrFo1Q0nI95kYgKgAYip0=\");\n\n_c = FetchAllCards;\nexport default FetchAllCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchAllCards\");","map":{"version":3,"sources":["/Users/rishabh/Documents/github-battle-with-hooks/github-battle-hooks/src/Components/Tags.js"],"names":["React","useState","useEffect","Card","FetchAllCards","props","darkMode","FetchCards","setFetchCards","isLoading","setisLoading","activeName","setActiveName","tags","FetchTagsCards","fetch","then","res","ok","Error","json","githubData","items","catch","err","console","log","handleName","each","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,MAAI;AAACC,IAAAA;AAAD,MAAaD,KAAjB;AACA,MAAI,CAACE,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAIY,IAAI,GAAG,CAAC,KAAD,EAAQ,YAAR,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,KAAtC,EAA6C,QAA7C,CAAX,CAL0B,CAO1B;;AACA,WAASC,cAAT,GAAyB;AACrBC,IAAAA,KAAK,CAAE,oEAAmEJ,UAAW,0CAAhF,CAAL,CACCK,IADD,CACOC,GAAD,IAAS;AACX,UAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH,OAFD,MAEK;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH;AACJ,KAPD,EAQCJ,IARD,CAQOK,UAAD,IAAgB;AAClBb,MAAAA,aAAa,CAACa,UAAU,CAACC,KAAZ,CAAb;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAXD,EAWGa,KAXH,CAWSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXhB;AAYH;;AAAA;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,cAAc;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAYnB,UAAZ;AACH,GAHQ,EAGP,CAACI,UAAD,CAHO,CAAT,CAvB0B,CA4B1B;;AACA,WAASgB,UAAT,CAAoBC,IAApB,EAAyB;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAhB,IAAAA,aAAa,CAACgB,IAAD,CAAb;AACH,GAhCyB,CAkC1B;;;AACA,MAAGnB,SAAH,EAAa;AACT;AAAA;AAAK,MAAA,GAAG,EAAC,qBAAT;AAA+B,MAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AACH;;AACD,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,QAAQ,KAAK,IAAb,GAAoB,sCAApB,GAA6D,2BAA7E;AAAA,gBAEQO,IAAI,CAACgB,GAAL,CAAUD,IAAD,iBACL;AAAI,QAAA,SAAS,EAAEjB,UAAU,KAAKiB,IAAf,GAAsB,QAAtB,GAAiC,EAAhD;AAAoD,QAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,IAAD,CAA7E;AAAA,kBAAsFA;AAAtF;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,gBAEQrB,UAAU,gBAAG,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAED,QAAhB;AAA0B,QAAA,UAAU,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyD;AAAK,QAAA,GAAG,EAAC,qBAAT;AAA+B,QAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAF3E;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAiBH;;GAvDQH,a;;KAAAA,a;AAyDT,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Card from './Card';\n\nfunction FetchAllCards(props) {\n    var {darkMode} = props;\n    var [FetchCards, setFetchCards] = useState([]);\n    var [isLoading, setisLoading] = useState(true);\n    var [activeName, setActiveName] = useState('All')\n    var tags = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python'];\n\n    // FetchCards\n    function FetchTagsCards(){\n        fetch(`https://api.github.com/search/repositories?q=stars:%3E1+language:${activeName}&sort=stars&order=desc&type=Repositories`)\n        .then((res) => {\n            if(!res.ok){\n                throw new Error(\"Something went Wrong\")\n            }else{\n                return res.json();\n            }\n        })\n        .then((githubData) => {\n            setFetchCards(githubData.items);\n            setisLoading(false)\n        }).catch(err => console.log(err))\n    };\n\n    useEffect(() => {\n        FetchTagsCards()\n        console.log(FetchCards)\n    },[activeName]) \n\n    // FetchCards ended\n    function handleName(each){\n        console.log(each)\n        setActiveName(each)\n    }\n\n    //  isLoding \n    if(isLoading){\n        <img src=\"/images/loading.gif\" alt=\"\" />\n    }\n    return (\n        <>\n            <div className={darkMode === true ? \"flex tags justify_between text_white\" : \"flex tags justify_between\"}>\n                {\n                    tags.map((each) => (\n                        <h3 className={activeName === each ? 'active' : \"\"} onClick={() => handleName(each)}>{each}</h3>\n                    ))\n                }\n            </div>\n            <div>\n                {\n                    FetchCards ? <Card darkMode={darkMode} FetchCards={FetchCards}/> : <img src=\"/images/loading.gif\" alt=\"\" /> \n                }\n            </div>\n\n        </>\n    )\n}\n\nexport default FetchAllCards\n"]},"metadata":{},"sourceType":"module"}